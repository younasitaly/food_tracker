// Initialize Firebase
const firebaseConfig = {
  apiKey: "AIzaSyAVmsiSzszfgCEk5qqnX57pGigoQtUafAU",
  authDomain: "food-tracker-fca47.firebaseapp.com",
  projectId: "food-tracker-fca47",
  storageBucket: "food-tracker-fca47.appspot.com",
  messagingSenderId: "769456892190",
  appId: "1:769456892190:web:9c2a2e7d676f1f2d85010f"
};

firebase.initializeApp(firebaseConfig);

const auth = firebase.auth();
const db = firebase.firestore();

const loginBox = document.getElementById("loginBox");
const mainApp = document.getElementById("mainApp");
const logoutBtn = document.getElementById("logoutBtn");
const loginBtn = document.getElementById("loginBtn");

const emailInput = document.getElementById("email");
const passwordInput = document.getElementById("password");

const itemNameInput = document.getElementById("itemName");
const datePreparedInput = document.getElementById("datePrepared");
const expiryDateInput = document.getElementById("expiryDate");
const addItemBtn = document.getElementById("addItemBtn");
const itemTable = document.getElementById("itemTable");
const productList = document.getElementById("productList");

// Show login or main app based on auth state
auth.onAuthStateChanged(user => {
  if (user) {
    loginBox.style.display = "none";
    mainApp.style.display = "block";
    logoutBtn.style.display = "inline-block";
    loadItems();
    loadProductNames();
  } else {
    loginBox.style.display = "block";
    mainApp.style.display = "none";
    logoutBtn.style.display = "none";
  }
});

// Login button handler
loginBtn.onclick = () => {
  const email = emailInput.value.trim();
  const password = passwordInput.value.trim();

  if (!email || !password) {
    alert("Inserisci email e password.");
    return;
  }

  auth.signInWithEmailAndPassword(email, password)
    .catch(err => alert("Errore login: " + err.message));
};

// Logout button handler
logoutBtn.onclick = () => {
  auth.signOut();
};

// Add item
addItemBtn.onclick = async () => {
  const name = itemNameInput.value.trim();
  const prepared = datePreparedInput.value;
  const expiry = expiryDateInput.value;

  if (!name || !prepared || !expiry) {
    alert("Completa tutti i campi.");
    return;
  }

  try {
    await db.collection("foodItems").add({ name, prepared, expiry });
    await db.collection("productNames").doc(name).set({ name });
    itemNameInput.value = "";
    datePreparedInput.value = "";
    expiryDateInput.value = "";
  } catch (e) {
    alert("Errore durante l'aggiunta: " + e.message);
  }
};

// Load and render food items
function loadItems() {
  db.collection("foodItems").orderBy("expiry").onSnapshot(snapshot => {
    itemTable.innerHTML = "";
    const today = new Date();
    today.setHours(0,0,0,0);

    snapshot.forEach(doc => {
      const data = doc.data();
      const id = doc.id;
      const expiryDate = new Date(data.expiry);
      const daysLeft = Math.floor((expiryDate - today) / (1000*60*60*24));

      let status = "";
      let rowClass = "";

      if (expiryDate < today) {
        status = "Scaduto";
        rowClass = "background-color:#ffcccc;";
      } else if (daysLeft <= 1) {
        status = "In Scadenza";
        rowClass = "background-color:#fff3cd;";
      } else {
        status = `${daysLeft} giorni rimasti`;
      }

      const tr = document.createElement("tr");
      tr.style = rowClass;
      tr.innerHTML = `
        <td>${data.name}</td>
        <td>${formatDate(data.prepared)}</td>
        <td>${formatDate(data.expiry)}</td>
        <td>${status}</td>
        <td>
          <button onclick="editItem('${id}')">✏️</button>
          <button onclick="deleteItem('${id}')">🗑️</button>
        </td>
      `;
      itemTable.appendChild(tr);
    });
  });
}

// Load and render product names for datalist
function loadProductNames() {
  db.collection("productNames").orderBy("name").onSnapshot(snapshot => {
    productList.innerHTML = "";
    snapshot.forEach(doc => {
      const opt = document.createElement("option");
      opt.value = doc.data().name;
      productList.appendChild(opt);
    });
  });
}

// Format date yyyy-mm-dd to dd/mm/yyyy
function formatDate(dateStr) {
  if (!dateStr) return "";
  const [y,m,d] = dateStr.split("-");
  return `${d}/${m}/${y}`;
}

// Delete item
window.deleteItem = async (id) => {
  if (confirm("Eliminare questo prodotto?")) {
    try {
      await db.collection("foodItems").doc(id).delete();
    } catch (e) {
      alert("Errore eliminazione: " + e.message);
    }
  }
};

// Edit item
